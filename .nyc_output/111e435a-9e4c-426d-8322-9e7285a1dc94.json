{"/home/paulobernardo/Ilhasoft/rapidpro-integration/src/data/chat/ChatRepositoryImpl.ts":{"path":"/home/paulobernardo/Ilhasoft/rapidpro-integration/src/data/chat/ChatRepositoryImpl.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":20},"end":{"line":3,"column":76}},"2":{"start":{"line":4,"column":19},"end":{"line":4,"column":51}},"3":{"start":{"line":7,"column":8},"end":{"line":7,"column":53}},"4":{"start":{"line":8,"column":8},"end":{"line":8,"column":39}},"5":{"start":{"line":9,"column":8},"end":{"line":9,"column":35}},"6":{"start":{"line":12,"column":24},"end":{"line":12,"column":84}},"7":{"start":{"line":13,"column":8},"end":{"line":15,"column":9}},"8":{"start":{"line":14,"column":12},"end":{"line":14,"column":130}},"9":{"start":{"line":16,"column":8},"end":{"line":18,"column":9}},"10":{"start":{"line":17,"column":12},"end":{"line":17,"column":124}},"11":{"start":{"line":19,"column":39},"end":{"line":19,"column":128}},"12":{"start":{"line":20,"column":8},"end":{"line":35,"column":9}},"13":{"start":{"line":21,"column":12},"end":{"line":23,"column":13}},"14":{"start":{"line":22,"column":16},"end":{"line":22,"column":114}},"15":{"start":{"line":24,"column":12},"end":{"line":24,"column":105}},"16":{"start":{"line":26,"column":13},"end":{"line":35,"column":9}},"17":{"start":{"line":27,"column":28},"end":{"line":27,"column":91}},"18":{"start":{"line":28,"column":12},"end":{"line":30,"column":13}},"19":{"start":{"line":29,"column":16},"end":{"line":29,"column":139}},"20":{"start":{"line":31,"column":12},"end":{"line":31,"column":93}},"21":{"start":{"line":34,"column":12},"end":{"line":34,"column":111}},"22":{"start":{"line":38,"column":28},"end":{"line":38,"column":66}},"23":{"start":{"line":39,"column":8},"end":{"line":41,"column":9}},"24":{"start":{"line":40,"column":12},"end":{"line":40,"column":19}},"25":{"start":{"line":42,"column":8},"end":{"line":42,"column":96}},"26":{"start":{"line":45,"column":28},"end":{"line":45,"column":66}},"27":{"start":{"line":46,"column":8},"end":{"line":48,"column":9}},"28":{"start":{"line":47,"column":12},"end":{"line":47,"column":19}},"29":{"start":{"line":49,"column":8},"end":{"line":49,"column":85}},"30":{"start":{"line":52,"column":8},"end":{"line":52,"column":64}},"31":{"start":{"line":55,"column":0},"end":{"line":55,"column":37}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":6,"column":4},"end":{"line":6,"column":5}},"loc":{"start":{"line":6,"column":60},"end":{"line":10,"column":5}},"line":6},"1":{"name":"(anonymous_1)","decl":{"start":{"line":11,"column":4},"end":{"line":11,"column":5}},"loc":{"start":{"line":11,"column":63},"end":{"line":36,"column":5}},"line":11},"2":{"name":"(anonymous_2)","decl":{"start":{"line":37,"column":4},"end":{"line":37,"column":5}},"loc":{"start":{"line":37,"column":75},"end":{"line":43,"column":5}},"line":37},"3":{"name":"(anonymous_3)","decl":{"start":{"line":44,"column":4},"end":{"line":44,"column":5}},"loc":{"start":{"line":44,"column":64},"end":{"line":50,"column":5}},"line":44},"4":{"name":"(anonymous_4)","decl":{"start":{"line":51,"column":4},"end":{"line":51,"column":5}},"loc":{"start":{"line":51,"column":38},"end":{"line":53,"column":5}},"line":51}},"branchMap":{"0":{"loc":{"start":{"line":13,"column":8},"end":{"line":15,"column":9}},"type":"if","locations":[{"start":{"line":13,"column":8},"end":{"line":15,"column":9}},{"start":{"line":13,"column":8},"end":{"line":15,"column":9}}],"line":13},"1":{"loc":{"start":{"line":16,"column":8},"end":{"line":18,"column":9}},"type":"if","locations":[{"start":{"line":16,"column":8},"end":{"line":18,"column":9}},{"start":{"line":16,"column":8},"end":{"line":18,"column":9}}],"line":16},"2":{"loc":{"start":{"line":20,"column":8},"end":{"line":35,"column":9}},"type":"if","locations":[{"start":{"line":20,"column":8},"end":{"line":35,"column":9}},{"start":{"line":20,"column":8},"end":{"line":35,"column":9}}],"line":20},"3":{"loc":{"start":{"line":21,"column":12},"end":{"line":23,"column":13}},"type":"if","locations":[{"start":{"line":21,"column":12},"end":{"line":23,"column":13}},{"start":{"line":21,"column":12},"end":{"line":23,"column":13}}],"line":21},"4":{"loc":{"start":{"line":26,"column":13},"end":{"line":35,"column":9}},"type":"if","locations":[{"start":{"line":26,"column":13},"end":{"line":35,"column":9}},{"start":{"line":26,"column":13},"end":{"line":35,"column":9}}],"line":26},"5":{"loc":{"start":{"line":28,"column":12},"end":{"line":30,"column":13}},"type":"if","locations":[{"start":{"line":28,"column":12},"end":{"line":30,"column":13}},{"start":{"line":28,"column":12},"end":{"line":30,"column":13}}],"line":28},"6":{"loc":{"start":{"line":39,"column":8},"end":{"line":41,"column":9}},"type":"if","locations":[{"start":{"line":39,"column":8},"end":{"line":41,"column":9}},{"start":{"line":39,"column":8},"end":{"line":41,"column":9}}],"line":39},"7":{"loc":{"start":{"line":46,"column":8},"end":{"line":48,"column":9}},"type":"if","locations":[{"start":{"line":46,"column":8},"end":{"line":48,"column":9}},{"start":{"line":46,"column":8},"end":{"line":48,"column":9}}],"line":46}},"s":{"0":1,"1":1,"2":1,"3":13,"4":13,"5":13,"6":7,"7":7,"8":1,"9":6,"10":1,"11":5,"12":5,"13":2,"14":1,"15":1,"16":3,"17":2,"18":2,"19":1,"20":1,"21":1,"22":3,"23":3,"24":1,"25":2,"26":3,"27":3,"28":1,"29":2,"30":6,"31":1},"f":{"0":13,"1":7,"2":3,"3":3,"4":6},"b":{"0":[1,6],"1":[1,5],"2":[2,3],"3":[1,1],"4":[2,1],"5":[1,1],"6":[1,2],"7":[1,2]},"inputSourceMap":{"version":3,"file":"/home/paulobernardo/Ilhasoft/rapidpro-integration/src/data/chat/ChatRepositoryImpl.ts","sources":["/home/paulobernardo/Ilhasoft/rapidpro-integration/src/data/chat/ChatRepositoryImpl.ts"],"names":[],"mappings":"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","sourcesContent":["import { HttpStatusCode } from '@rocket.chat/apps-engine/definition/accessors';\nimport { IMessageAttachment } from '@rocket.chat/apps-engine/definition/messages';\n\nimport AppError from '../../domain/AppError';\nimport IAttachment from '../../domain/Attachment';\nimport IAppDataSource from '../app/IAppDataSource';\nimport IChatInternalDataSource from './IChatInternalDataSource';\nimport IChatRepository from './IChatRepository';\nimport IChatWebhook from './IChatWebhook';\n\nexport default class ChatRepositoryImpl implements IChatRepository {\n\n    constructor(\n        private readonly internalDataSource: IChatInternalDataSource,\n        private readonly chatWebhook: IChatWebhook,\n        private readonly appPersis: IAppDataSource,\n    ) { }\n\n    public async sendMessage(userUrn: string, botUsername: string, text?: string, attachments?: Array<IAttachment>): Promise<string> {\n\n        const botUser = await this.internalDataSource.getUserByUsername(botUsername);\n        if (!botUser) {\n            throw new AppError(`Could not find bot with username ${botUsername}`, HttpStatusCode.NOT_FOUND);\n        }\n        // userIdentifier will be username if type === `direct` or token if type === `livechat`\n        if (userUrn.indexOf(':') === -1) {\n            throw new AppError(`Invalid user identification: ${userUrn}`, HttpStatusCode.BAD_REQUEST);\n        }\n        const [type, userIdentifier] = [userUrn.substring(0, userUrn.indexOf(':')), userUrn.substring(userUrn.indexOf(':') + 1)];\n\n        if (type === 'direct') {\n            if (!await this.internalDataSource.getUserByUsername(userIdentifier)) {\n                throw new AppError(`User not found ${userUrn}`, HttpStatusCode.BAD_REQUEST);\n            }\n            return await this.internalDataSource.sendMessage(botUser, userIdentifier, text, attachments);\n        } else if (type === 'livechat') {\n            const visitor = await this.internalDataSource.getVisitorByToken(userIdentifier);\n            if (!visitor) {\n                throw new AppError(`Could not find visitor with token: ${userIdentifier}`, HttpStatusCode.NOT_FOUND);\n            }\n\n            return await this.internalDataSource.sendLivechatMessage(botUser, visitor, text);\n        } else {\n            throw new AppError(`Invalid room type: ${type}`, HttpStatusCode.BAD_REQUEST);\n        }\n    }\n\n    public async onDirectMessage(userUsername: string, botUsername: string, message?: string, attachments?: Array<IMessageAttachment>): Promise<void> {\n        // valida que o bot é um bot válido\n        const callbackUrl = await this.getBotCallback(botUsername);\n        if (!callbackUrl) {\n            return;\n        }\n\n        await this.chatWebhook.onDirectMessage(callbackUrl, userUsername, message, attachments);\n    }\n    public async onLivechatMessage(visitorToken: string, botUsername: string, message?: string): Promise<void> {\n        // valida que o bot é um bot válido\n        const callbackUrl = await this.getBotCallback(botUsername);\n        if (!callbackUrl) {\n            return;\n        }\n\n        await this.chatWebhook.onLivechatMessage(callbackUrl, visitorToken, message);\n    }\n\n    private async getBotCallback(botUsername: string) {\n        return await this.appPersis.getCallbackUrl(botUsername);\n    }\n\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"ce2fc8ffd9c780c6d8f80c5b16269427d2a1c05f"},"/home/paulobernardo/Ilhasoft/rapidpro-integration/test/factories/UserFactory.ts":{"path":"/home/paulobernardo/Ilhasoft/rapidpro-integration/test/factories/UserFactory.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":16},"end":{"line":3,"column":68}},"2":{"start":{"line":4,"column":16},"end":{"line":4,"column":37}},"3":{"start":{"line":5,"column":14},"end":{"line":5,"column":30}},"4":{"start":{"line":6,"column":20},"end":{"line":20,"column":2}},"5":{"start":{"line":21,"column":0},"end":{"line":21,"column":30}}},"fnMap":{},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1},"f":{},"b":{},"inputSourceMap":{"version":3,"file":"/home/paulobernardo/Ilhasoft/rapidpro-integration/test/factories/UserFactory.ts","sources":["/home/paulobernardo/Ilhasoft/rapidpro-integration/test/factories/UserFactory.ts"],"names":[],"mappings":";;AAAA,qEAAkG;AAClG,sCAAsC;AACtC,+BAA+B;AAE/B,MAAM,WAAW,GAAG,OAAO,CAAC,IAAI,CAAC,WAAW,CAAQ;IAChD,EAAE,EAAE,KAAK,CAAC,MAAM,CAAC,YAAY,CAAC,EAAE,CAAC;IACjC,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE;IAC5B,QAAQ,EAAE,KAAK,CAAC,IAAI,CAAC,QAAQ,EAAE;IAC/B,KAAK,EAAE,CAAC,MAAM,CAAC;IACf,MAAM,EAAE,QAAQ;IAChB,gBAAgB,EAAE,4BAAoB,CAAC,MAAM;IAC7C,IAAI,EAAE,gBAAQ,CAAC,IAAI;IACnB,SAAS,EAAE,IAAI;IACf,SAAS,EAAE,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE;IAC9B,SAAS,EAAE,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE;IAC9B,WAAW,EAAE,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE;IAChC,MAAM,EAAE,EAAE;IACV,SAAS,EAAE,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC;CACxD,CAAC,CAAC;AAEH,kBAAe,WAAW,CAAC","sourcesContent":["import { IUser, UserStatusConnection, UserType } from '@rocket.chat/apps-engine/definition/users';\nimport * as Factory from 'factory.ts';\nimport * as faker from 'faker';\n\nconst userFactory = Factory.Sync.makeFactory<IUser>({\n    id: faker.random.alphaNumeric(16),\n    name: faker.name.firstName(),\n    username: faker.name.lastName(),\n    roles: ['user'],\n    status: 'online',\n    statusConnection: UserStatusConnection.ONLINE,\n    type: UserType.USER,\n    isEnabled: true,\n    createdAt: faker.date.recent(),\n    updatedAt: faker.date.recent(),\n    lastLoginAt: faker.date.recent(),\n    emails: [],\n    utcOffset: faker.random.number({ min: -12, max: 14 }),\n});\n\nexport default userFactory;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"664d5ebdf4dcf1bb7bf10e9ef070574334ab830c"},"/home/paulobernardo/Ilhasoft/rapidpro-integration/test/factories/VisitorFactory.ts":{"path":"/home/paulobernardo/Ilhasoft/rapidpro-integration/test/factories/VisitorFactory.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":16},"end":{"line":3,"column":37}},"2":{"start":{"line":4,"column":14},"end":{"line":4,"column":30}},"3":{"start":{"line":5,"column":23},"end":{"line":10,"column":2}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":33}}},"fnMap":{},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1},"f":{},"b":{},"inputSourceMap":{"version":3,"file":"/home/paulobernardo/Ilhasoft/rapidpro-integration/test/factories/VisitorFactory.ts","sources":["/home/paulobernardo/Ilhasoft/rapidpro-integration/test/factories/VisitorFactory.ts"],"names":[],"mappings":";;AACA,sCAAsC;AACtC,+BAA+B;AAE/B,MAAM,cAAc,GAAG,OAAO,CAAC,IAAI,CAAC,WAAW,CAAW;IACtD,KAAK,EAAE,KAAK,CAAC,MAAM,CAAC,IAAI,EAAE;IAC1B,IAAI,EAAE,kBAAkB;IACxB,QAAQ,EAAE,2BAA2B;IACrC,UAAU,EAAE,KAAK,CAAC,IAAI,CAAC,OAAO,EAAE;CACnC,CAAC,CAAC;AAEH,kBAAe,cAAc,CAAC","sourcesContent":["import { IVisitor } from '@rocket.chat/apps-engine/definition/livechat';\nimport * as Factory from 'factory.ts';\nimport * as faker from 'faker';\n\nconst visitorFactory = Factory.Sync.makeFactory<IVisitor>({\n    token: faker.random.uuid(),\n    name: 'livechat-visitor',\n    username: 'livechat-visitor-username',\n    department: faker.name.jobArea(),\n});\n\nexport default visitorFactory;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"3e403153a8a941134704406db16c2adeaca91598"}}